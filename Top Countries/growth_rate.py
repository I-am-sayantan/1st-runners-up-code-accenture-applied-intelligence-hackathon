# -*- coding: utf-8 -*-
"""growth_rate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sn9hfoQlwxdjrnN_BfdaExJL69cHqoxe
"""

import pandas as pd
import numpy as np
import plotly.graph_objs as go
from plotly.subplots import make_subplots
import os
import plotly.io as pio

"""# data preprocessing

"""

data = pd.read_csv('all_countries_cont_pop.csv',thousands=',')

data.drop(['prev_new_case','prev_confirmed','growth_factor'],axis=1,inplace=True)

data.drop(np.where((data['country']=='Turkey'))[0],axis=0,inplace=True)
data.reset_index(inplace = True)
data.drop('index',axis=1,inplace=True)

data.drop(np.where(data['confirmed']==0)[0],axis=0,inplace=True)
data.reset_index(inplace = True)
data.drop('index',axis=1,inplace=True)

data['percentage_confirmed'] = data['confirmed']*100/data['population']
data['percentage_fatalities'] = data['fatalities']*100/data['population']
data['percentage_new_case'] = data['new_case']*100/data['population']
data.to_csv('growth.csv')

"""taking countries with less than 0.1% confirmed cases till 29 June 2021"""

rem_country = [data.iloc[x].country for x in list(np.where((data.date == data.date.iloc[-1]) & (data.percentage_confirmed<=0.1))[0]) ]

for i in rem_country:
  data.drop(np.where((data['country']==i))[0],axis=0,inplace=True)
  data.reset_index(inplace = True)
  data.drop('index',axis=1,inplace=True)

data.to_csv('growth.csv',index=False)

"""# Functions"""

data = pd.read_csv('growth.csv')

Asia = data[data.continent == 'Asia'].drop(['continent'],axis=1)
Europe = data[data.continent == 'Europe'].drop(['continent'],axis=1)
Africa = data[data.continent == 'Africa'].drop(['continent'],axis=1)
S_America = data[data.continent == 'South America'].drop(['continent'],axis=1)
N_America = data[data.continent == 'North America'].drop(['continent'],axis=1)
Australia = data[data.continent == 'Australia'].drop(['continent'],axis=1)

def plot_country(folder,x):
  layout = go.Layout(
    autosize=False,
    width=1000,
    height=10
    )
  
  df = data[data.country==x]

  fig = make_subplots(rows=6, cols=1)
  fig.update_layout(title=x)
  fig.add_trace(go.Scatter(x=df.date, y=df.confirmed,
                          name='confirmed'),row=1,col=1)
  fig.add_trace(go.Scatter(x=df.date, y=df.percentage_confirmed,
                          name='percentage_confirmed'),row=2,col=1)
  
  fig.add_trace( go.Scatter(x=df.date, y=df.fatalities,
                          name='fatalities'),row=3,col=1)
  
  fig.add_trace( go.Scatter(x=df.date, y=df.percentage_fatalities,
                          name='percentage_fatalities'),row=4,col=1)
  
  fig.add_trace(go.Scatter( x=df.date, y=df.new_case,
                          name='new_case'),row=5,col=1)
 
  fig.add_trace(go.Scatter( x=df.date, y=df.percentage_new_case,
                          name='percentage_new_case'),row=6,col=1)
  
  pio.write_image(fig, 'images/'+ folder + x + '.png', format='png')

def last_day_by_rel_nc(df):
  x =  df.loc[df['date']==df.date.values[-1]].set_index('country')
  x.drop('date',axis=1,inplace=True)
  return x.sort_values(by = 'percentage_new_case')

"""# Asia


"""

countries = list(Asia.country.unique())

x = Asia[np.isinf(Asia.percentage_new_case)].index
y = Asia.drop(x).groupby('country')['percentage_new_case'].max()

"""max new cases percentage < 0.1"""

countries = y[y<0.1].index

# !conda install -c plotly plotly-orca
for i in countries:
  plot_country('Asia/',i)

"""# Asia_final
'Bhutan',
'Japan',
'Singapore',
'Syria'
'Tajikistan',

"""

countries = [
'Bhutan',
'Japan',
'Singapore',
'Syria',
'Tajikistan',]

for i in countries:
  plot_country('final/Asia/',i)

"""# Australia

"""

Aus_country = Australia.country.unique()
Aus_country

for i in countries:
  plot_country('Australia/',i)

"""# AUS_final
australia
new_zealand
"""

for i in ['Australia', 'New Zealand']:
  plot_country('final/Australia/',i)

"""# Europe"""

Europe.reset_index(inplace=True)
Europe.drop('index',axis=1,inplace=True)
countries = Europe.country.unique()

x = Europe[np.isinf(Europe.percentage_new_case)].index
y = Europe.drop(x).groupby('country')['percentage_new_case'].max()

countries = y[y<0.1].index

for i in countries:
  plot_country('Europe/',i)

"""# Europe_final

'Belarus',
'Finland',
'Iceland',
'Norway',  
'Russia'
"""

for i in  ['Belarus','Finland','Iceland','Norway',  'Russia']:
  plot_country('final/Europe/',i)

"""# North america"""

N_America.reset_index(inplace=True)
N_America.drop('index',axis=1,inplace=True)
countries = N_America.country.unique()

x = N_America[np.isinf(N_America.percentage_new_case)].index
y = N_America.drop(x).groupby('country')['percentage_new_case'].max()

countries = y[y<0.05].index

for i in countries:
  plot_country('North America/',i)

"""# NA_final
'Canada',
'Dominican Republic',
'Guatemala',
'Nicaragua'
"""

for i in ['Canada','Dominican Republic','Guatemala','Nicaragua']:
  plot_country('final/North America/',i)

"""# SA"""

S_America.reset_index(inplace=True)
S_America.drop('index',axis=1,inplace=True)
countries = S_America.country.unique()

for i in countries:
  plot_country('South America/',i)

"""
# South America Final
Venezuela	
Ecaudor"""

for i in ['Venezuela', 'Ecaudor']:
  plot_country('final/South America/',i)

"""# Africa"""

Africa.reset_index(inplace=True)
Africa.drop('index',axis=1,inplace=True)
countries = Africa.country.unique()

x = Africa[np.isinf(Africa.percentage_new_case)].index
y = Africa.drop(x).groupby('country')['percentage_new_case'].max()

countries = list(y[y<0.01].index)

"""Central African Republic
Cote d'Ivoire
Eritrea
Ethiopia
Ghana
"""

for i in countries:
  plot_country('Africa/',i)

"""# Africa_final

'Cote d\'Ivoire',
'Ethiopia',
'Ghana',
'Togo',
'Madagascar',
"""

for i in ['Cote d\'Ivoire','Ethiopia','Ghana','Togo','Madagascar',]: 
  plot_country('final/Africa/',i)

