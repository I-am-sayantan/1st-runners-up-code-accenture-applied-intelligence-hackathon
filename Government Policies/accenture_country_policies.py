# -*- coding: utf-8 -*-
"""Accenture_country_policies.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VdvNGtAXmYxuPyHI2cKIu607TwH_32wx
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.graph_objs as go
from plotly.subplots import make_subplots
import plotly

df=pd.read_csv("COVID_gov_complete_29_03.csv",index_col=0)

columns=['newcases', 
       'Days_since_S1_School closing_1.0', 
       'Days_since_S1_School closing_2.0',
       'Days_since_S2_Workplace closing_1.0',
       'Days_since_S2_Workplace closing_2.0',
       'Days_since_S3_Cancel public events_1.0',
       'Days_since_S3_Cancel public events_2.0',
       'Days_since_S4_Close public transport_1.0',
       'Days_since_S4_Close public transport_2.0',
       'Days_since_S5_Public information campaigns_1.0',
       'Days_since_S6_Restrictions on internal movement_1.0',
       'Days_since_S6_Restrictions on internal movement_2.0',
       'Days_since_S7_International travel controls_1.0',
       'Days_since_S7_International travel controls_2.0',
       'Days_since_S7_International travel controls_3.0',]

for i in columns:
  if i != "newcases":
    df[i]=np.sign(df[i])

def policies(i):
  data= df[df["CountryName"]==i].reset_index()
  data.drop(['index','CountryName'],axis=1,inplace=True)
  data["newcases"]= data["ConfirmedCases"]-data["ConfirmedCases"].shift( periods=1)
  data.at[0,'newcases']=data["ConfirmedCases"].values[0]
  data.set_index('Date',inplace=True)
  data = data[columns]
  col = columns[1:]
  last_day = data.index[-1]
  fcol = []
  for j in col:
    if data.loc[last_day,j] == 0:
      data.drop(j,axis=1)
    else:
      fcol.append(j)

  rows = len(fcol)+1

  fig = make_subplots(rows=rows, cols=1)
  fig.add_trace(go.Scatter(x=data.index, y=data.newcases, name='newcases'),row=1,col=1)
  for y in range(1,rows-1):
    # data[fcol[y]]=np.sign(data[fcol[y]])
    fig.add_trace(go.Scatter(x=data.index, y=data[fcol[y]], name=fcol[y]),row=y+1,col=1)
  if rows>1:
    fig.update_layout(title=i,height=80*rows, width=1000,legend_orientation='h')
  else:
    fig.update_layout(title=i,height=300, width=1000)
  plotly.offline.plot(fig,filename=str(i)+'.html')

def restrictions(i):
  data= df[df["CountryName"]==i].reset_index()
  data.drop(['index','CountryName'],axis=1,inplace=True)
  data["newcases"]= data["ConfirmedCases"]-data["ConfirmedCases"].shift( periods=1)
  data.at[0,'newcases']=data["ConfirmedCases"].values[0]
  data.set_index('Date',inplace=True)
  data = data[columns]
  col = columns[1:]
  last_day = data.index[-1]
  fcol = []
  for j in col:
    if data.loc[last_day,j] == 0:
      data.drop(j,axis=1)
    else:
      fcol.append(j)
  return fcol

country={"Singapore",'Tanzania','Canada','New Zealand','Finland','Ecuador'}

for i in country:
  policies(i)



